---
    name: Release-Maven
    
    on:
      workflow_dispatch:
        inputs:
          java_version:
            description: Java version to use
            type: string
            required: false
            default: "17"
          branch:
            description: "The branch to checkout when cutting the release."
            required: true
            default: "main"
          releaseVersion:
            description: "Default version to use when preparing a release."
            required: true
            default: "X.Y.Z"
          developmentVersion:
            description: "Default version to use for new local working copy."
            required: true
            default: "X.Y.Z-SNAPSHOT"
    
    jobs:
      build:
        uses: jqassistant-tooling/jqassistant-github-actions/.github/workflows/release.yml@main
        with:
          branch: ${{ github.event.inputs.branch }}
          releaseVersion: ${{ github.event.inputs.releaseVersion }}
          developmentVersion: ${{ github.event.inputs.developmentVersion }}
        secrets:
          ossrh_username: ${{ secrets.OSSRH_USERNAME }}
          ossrh_password: ${{ secrets.OSSRH_PASSWORD }}
          ossrh_signing_key: ${{ secrets.OSSRH_SIGNING_KEY }}
          ossrh_signing_password: ${{ secrets.OSSRH_SIGNING_PASSWORD }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
---
  name: Release-NPM

  on:
    workflow_dispatch:
      inputs:
        branch:
          description: "The branch to checkout when cutting the release."
          required: true
          default: "main"
        releaseVersion:
          description: "Version to use when preparing a release."
          required: true
          default: "X.Y.Z"
        developmentVersion:
          description: "Version to use for new local working copy after release."
          required: true
          default: "X.Y+1.Z"

  jobs:
    npm_release:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Setup Node.js (LTS)
          uses: actions/setup-node@v3
          with:
           node-version: 'lts/*'

        - name: Update package.json to release version
          run: npm version ${{ github.event.inputs.releaseVersion }} --no-git-tag-version

        - name: Install dependencies
          run: npm install

        - name: Build package
          run: npm run build

        - name: Publish to npm
          run: npm publish
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

        - name: Update package.json to development version
          run: npm version ${{ github.event.inputs.developmentVersion }} --no-git-tag-version

        - name: Push development version commit
          run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
            git commit -am "Update to development version ${{ github.event.inputs.developmentVersion }}"
            git push
